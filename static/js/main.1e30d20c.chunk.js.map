{"version":3,"sources":["utils/index.js","actions/index.js","reducers/index.js","store/configureStore.js","components/Cell.js","components/WinnerModal.js","containers/Game.js","App.js","serviceWorker.js","index.js"],"names":["calcPositions","size","step","positions","i","x","push","y","createCells","simple","cells","number","result","slice","sort","a","b","Math","random","forEach","d","order","RESTORE_CELLS","SAVE_CELLS","MOVE_BACK","MOVE_CELL","SET_SIZE","RESET","window","innerWidth","correct","Array","fill","map","Object","assign","initialState","winner","history","saved","store","createStore","state","arguments","length","undefined","action","type","prev","JSON","stringify","newHistory","newCells","item","cellsOrigin","currentCell","objectSpread","cellIndex","findIndex","emptyIndex","setCell","target","source","moveHandler","payload","test","resetPositions","reset","prevCells","cropHistory","pop","parse","restoredCells","resizedPositions","resizedCells","Cell","styled","div","_templateObject","CellComponent","props","react_default","createElement","react","onClick","clicked","className","style","top","left","width","height","Wrap","WinnerModal_templateObject","Modal","_templateObject2","Title","_templateObject3","Text","p","_templateObject4","Button","_templateObject5","WinnerModal","close","e","stopPropagation","Game_templateObject","GameBox","Game_templateObject2","Game_templateObject3","Game_templateObject4","Game","this","resetGameAction","moveBackAction","_this$props","saveAction","restoreAction","emptyOrder","find","indexOf","moveCellAction","addEventListener","updateSize","bind","removeEventListener","setSizeAction","_this","_this$props2","Game_Wrap","components_WinnerModal","Game_Title","components_Cell","key","cellClick","Game_Button","save","restore","back","Component","connect","dispatch","moveCell","resetGame","cellsStr","setSize","App","containers_Game","Boolean","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e30d20c.chunk.js","sourcesContent":["export function calcPositions(size) {\n  const step = size/4;\n  const positions = [];\n\n  for(let i = 0; i < 4; i++) {\n    let x = step * i;\n    for (let i = 0; i < 4; i++) {\n      positions.push({\n        x: x,\n        y: step * i\n      });\n    }\n  }\n\n  return positions;\n}\n\nexport function moveHandler(item, cellsOrigin) {\n  const cells = cellsOrigin.slice();\n  const currentCell = { ...item };\n\n  const cellIndex = cells.findIndex(d => d.number === currentCell.number);\n  const emptyIndex = cells.findIndex(d => d.number === 16);\n\n  function setCell(target, source) {\n    target.x = source.x;\n    target.y = source.y;\n    target.order = source.order;\n  }\n\n  setCell(cells[cellIndex], cells[emptyIndex]);\n  setCell(cells[emptyIndex], currentCell);\n\n  return cells;\n}\n\nexport function createCells(simple) {\n  const cells = [];\n\n  for(let i = 1; i < 17; i++) {\n    cells.push({\n      number: i\n    });\n  }\n\n  const result = simple ? cells.slice() : cells.sort((a,b) => Math.random() - 0.5);\n\n  if (simple) {\n    result[14] = cells[15];\n    result[15] = cells[14];\n  }\n\n  result.forEach((d, i) => d.order = i);\n  return result;\n}\n\nexport function getCorrect() {\n  return new Array(16).fill('').map((d,i) => i + 1);\n}","export const RESTORE_CELLS = 'RESTORE_CELLS';\nexport const SAVE_CELLS = 'SAVE_CELLS';\nexport const MOVE_BACK = 'MOVE_BACK';\nexport const MOVE_CELL = 'MOVE_CELL';\nexport const SET_SIZE = 'SET_SIZE';\nexport const RESET = 'RESET';\n\nexport function moveCell(item) {\n  return {\n    type: MOVE_CELL,\n    payload: item,\n  }\n};\n\nexport function resetGame(simple) {\n  return {\n    type: RESET,\n    payload: simple,\n  }\n};\n\nexport function moveBack() {\n  return {\n    type: MOVE_BACK,\n  }\n};\n\nexport function saveCells(cells) {\n  return {\n    type: SAVE_CELLS,\n    payload: cells\n  }\n};\n\nexport function restoreCells() {\n  return {\n    type: RESTORE_CELLS,\n  }\n};\n\nexport function setSize(size) {\n  return {\n    type: SET_SIZE,\n    payload: size\n  }\n};\n\n","import { moveHandler, createCells, calcPositions, getCorrect } from '../utils';\nimport { MOVE_CELL, RESET, MOVE_BACK, SAVE_CELLS, RESTORE_CELLS, SET_SIZE } from '../actions'\n\nconst size = window.innerWidth > 400 ? 400 : 300;\n\nconst positions = calcPositions(size);\nconst cells = createCells();\nconst correct = getCorrect();\ncells.forEach((d, i) => Object.assign(d, positions[i]));\n\nexport const initialState = {\n  cells,\n  winner: false,\n  history: [],\n  saved: null,\n  size\n};\n\nexport function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case MOVE_CELL:\n\n      // save history\n      const prev = JSON.stringify(state.cells);\n      const newHistory = state.history.slice();\n      newHistory.push(prev);\n\n      const newCells = moveHandler(action.payload, state.cells);\n      const test = state.cells.slice().sort((a, b) => a.order - b.order).map(d => d.number);\n      return {\n        ...state,\n        cells: newCells,\n        winner: JSON.stringify(test) === JSON.stringify(correct),\n        history: newHistory,\n      }\n    case RESET:\n      const resetPositions = calcPositions(state.size);\n      const reset = createCells(action.payload);\n      reset.forEach((d, i) => Object.assign(d, resetPositions[i]));\n      return {\n        ...state,\n        cells: reset,\n        winner: false,\n        history: [],\n      }\n    case MOVE_BACK:\n      const prevCells = state.history[state.history.length - 1];\n      const cropHistory = state.history.slice();\n      cropHistory.pop();\n      return {\n        ...state,\n        cells: JSON.parse(prevCells),\n        history: cropHistory,\n      }\n    case SAVE_CELLS:\n      return {\n        ...state,\n        saved: action.payload,\n      }\n    case RESTORE_CELLS:\n      const restoredCells = JSON.parse(state.saved);\n      return {\n        ...state,\n        cells: restoredCells,\n        history: [],\n        saved: null,\n      }\n    case SET_SIZE:\n      const resizedPositions = calcPositions(action.payload);\n      const resizedCells = state.cells.slice();\n      resizedCells.forEach((d, i) => Object.assign(d, resizedPositions[i]));\n      return {\n        ...state,\n        cells: resizedCells,\n        size: action.payload\n      }\n    default:\n      return state\n  }\n}","import { createStore } from 'redux';\nimport { rootReducer, initialState } from '../reducers';\n\nexport const store = createStore(rootReducer, initialState);","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Cell = styled.div`\n  font-size: 22px;\n  transition: all 0.1s ease-in;\n  border-radius: 4px;\n  background: #ffffff;\n  border: 2px solid #333333;\n  box-sizing: border-box;\n  position: absolute;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  user-select: none;\n  &:hover {\n    background: rgba(255,255,255,0.9);\n  }\n`;\n\nconst CellComponent = (props) => {\n  return (\n    <Fragment>\n      {\n        props.number !== 16 ? (\n          <Cell\n            onClick={props.clicked}\n            className={props.number === 16 ? 'dark' : ''}\n            style={{\n              'top': props.top, 'left': props.left,\n              'width': props.size + 'px',\n              'height': props.size + 'px'\n            }}\n          >\n            { props.number }\n          </Cell>\n        ) : ''\n      }\n    </Fragment>\n  );\n}\n\nCellComponent.propTypes = {\n  top: PropTypes.number,\n  left: PropTypes.number,\n  size: PropTypes.number,\n  number: PropTypes.number,\n  clicked: PropTypes.func\n};\n\nexport default CellComponent;","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Wrap = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0,0,0,0.7);\n  z-index: 1;\n`;\n\nconst Modal = styled.div`\n  width: 466px;\n  box-sizing: border-box;\n  background: #ffffff;\n  border-radius: 4px;\n  padding: 40px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  box-shadow: 0 0 20px 3px rgba(0,0,0,0.6);\n  @media screen and (max-width: 500px) {\n    width: 90%;\n    padding: 20px;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 36px;\n  text-align: center;\n  margin-bottom: 20px;\n  @media screen and (max-width: 500px) {\n    font-size: 26px;\n  }\n  @media screen and (max-width: 380px) {\n    font-size: 22px;\n  }\n`;\n\nconst Text = styled.p`\n  font-size: 24px;\n  margin-bottom: 30px;\n`;\n\nconst Button = styled.div`\n  display: inline-block;\n  padding: 10px 40px;\n  border-radius: 4px;\n  background: #333333;\n  color: #ffffff;\n  font-size: 24px;\n  font-weight: 500;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst WinnerModal = (props) => {\n  return (\n    <Wrap onClick={props.close}>\n      <Modal onClick={(e) => e.stopPropagation()}>\n        <Title>🎉 Congradulations 🎉</Title>\n        <Text>You are a winner!</Text>\n        <Button onClick={props.close}>Play again</Button>\n      </Modal>\n    </Wrap>\n  );\n}\n\nWinnerModal.propTypes = {\n  close: PropTypes.func,\n};\n\nexport default WinnerModal;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport {\n  moveCell,\n  resetGame,\n  moveBack,\n  saveCells,\n  restoreCells,\n  setSize,\n} from '../actions';\nimport Cell from '../components/Cell';\nimport WinnerModal from '../components/WinnerModal';\n\nconst Wrap = styled.div`\n  display: inline-block;\n  text-align: center;\n`;\n\nconst GameBox = styled.div`\n  width: 400px;\n  height: 400px;\n  border: 2px solid #333333;\n  position: relative;\n  background: #333333;\n  border-radius: 4px;\n  box-shadow: 0 0 30px rgba(0,0,0,0.6);\n  margin: 0 auto 20px auto;\n`;\n\nconst Button = styled.div`\n  margin: 10px;\n  display: inline-block;\n  background: #ffffff;\n  padding: 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  user-select: none;\n  &:hover {\n    background: rgba(255,255,255,0.8);\n  }\n  @media screen and (max-width: 320px) {\n    margin: 5px;\n  }\n`;\n\nconst Title = styled.div`\n  text-align: center;\n  font-size: 40px;\n  padding: 15px 0 20px 0;\n`;\n\n\nclass Game extends Component {\n  reset(simple) {\n    this.props.resetGameAction(simple);\n  }\n\n  back() {\n    this.props.moveBackAction();\n  }\n\n  save() {\n    const { cells, saveAction } = this.props;\n    const cellsStr = JSON.stringify(cells);\n    saveAction(cellsStr);\n  }\n\n  restore() {\n    this.props.restoreAction();\n  }\n\n  cellClick(item) {\n    const cells = this.props.cells;\n    const emptyOrder = cells.find(e => e.number === 16).order;\n    const allows = [emptyOrder - 1, emptyOrder + 1, emptyOrder - 4, emptyOrder + 4];\n    if (allows.indexOf(item.order) === -1) return false;\n    this.props.moveCellAction(item, cells);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateSize.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateSize.bind(this));\n  }\n\n  updateSize() {\n    const size = window.innerWidth > 400 ? 400 : 300;\n    if (size !== this.props.size) this.props.setSizeAction(size);\n  }\n\n  render() {\n    const { winner, cells, history, saved, size } = this.props;\n\n    return (\n      <Wrap>\n        { winner && <WinnerModal close={() => this.reset()} /> }\n        <Title onClick={() => this.reset(true)}>Game 15</Title>\n        <GameBox style={{'width': size, 'height': size}}>\n          {\n            cells.map((item, i) => (\n              <Cell\n                key={i}\n                top={item.x}\n                left={item.y}\n                size={size/4}\n                number={item.number}\n                clicked={() => this.cellClick(item)}\n              />\n            ))\n          }\n        </GameBox>\n        <Button onClick={() => this.reset()}>Reset</Button>\n        <Button onClick={() => this.save()}>Save</Button>\n        { saved ? <Button onClick={() => this.restore()}>Restore</Button> : '' }\n        { history.length ? <Button onClick={() => this.back()}>Back</Button> : '' }\n      </Wrap>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  cells: store.cells,\n  winner: store.winner,\n  history: store.history,\n  saved: store.saved,\n  size: store.size,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  moveCellAction: (item) => dispatch(moveCell(item)),\n  resetGameAction: (simple) => dispatch(resetGame(simple)),\n  moveBackAction: () => dispatch(moveBack()),\n  saveAction: (cellsStr) => dispatch(saveCells(cellsStr)),\n  restoreAction: () => dispatch(restoreCells()),\n  setSizeAction: (size) => dispatch(setSize(size)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","import React, { Component } from 'react';\nimport Game from './containers/Game';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store } from './store/configureStore';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport 'typeface-gloria-hallelujah/index.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}